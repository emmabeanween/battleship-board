{"ast":null,"code":"var _jsxFileName = \"/Users/emma/Documents/battleship-board/src/BattleshipBoard.js\";\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass BattleshipBoard extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.generateShip = () => {\n      //generate either zero or one\n      var randNum = Math.floor(Math.random() * (1 - 0 + 1)) + 0;\n\n      if (randNum == 1) {\n        // generate a vertical ship\n        // generate an random number between 1 and 100, inclusive\n        var shipStart = Math.floor(Math.random() * (100 - 0 + 1) + 1);\n\n        if (shipStart + (10 * 5 - 10) > 100) {\n          // the ship will go off the board if generating south\n          // build ship up\n          alert(\"here\");\n          var verticalShip = [];\n\n          for (var i = 0; i < 5; i++) {\n            if (i == 0) {\n              verticalShip.append(shipStart);\n            } else {\n              shipStart = shipStart - 10;\n              verticalShip.append(shipStart);\n            }\n          } // append the new ship to shipPositions\n\n\n          var shipPositions = this.state.shipPositions.slice();\n\n          for (var i = 0; i < verticalShip.length; i++) {\n            shipPositions.append(verticalShip[i]);\n          }\n\n          this.setState({\n            shipPositions: shipPositions\n          });\n        } else {\n          // build ship down (south)\n          this.generateShip();\n        }\n      } else {\n        this.generateShip();\n      } // generate random number between 1 and 100, inclusive: var randNum = ...\n      // if randNum + ((10*length) - (10)) > 100: build ship up\n      // var verticalShip = [];               \n      // for (var i = 0; i < length; i++ ) { if (i=0){ verticalShip.append(randNum)} else{  randNum = randNum - 10 verticalShip.append(randNum)       }           }\n      // same for building the ship down, except randNum = randNum + 10\n      // check that none of the generated numbers are in the current position\n      // const shipPositions = this.state.shipPositions.slice();\n      // for (var i = 0; i < verticalShip.length; i++){ if shipPositions.index(verticalShip[i]) > -1} this.generateVertical(length); else{\n      // for (var i= 0; i < verticalShip....){shipPositions.append(verticalShip[i])}\n\n    };\n\n    this.state = {\n      shipPositions: [],\n      verticalorHorizontal: null\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [this.state.shipPositions, /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.generateShip,\n        children: \"Click me\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default BattleshipBoard;","map":{"version":3,"sources":["/Users/emma/Documents/battleship-board/src/BattleshipBoard.js"],"names":["React","useState","BattleshipBoard","Component","constructor","props","generateShip","randNum","Math","floor","random","shipStart","alert","verticalShip","i","append","shipPositions","state","slice","length","setState","verticalorHorizontal","render"],"mappings":";AACA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;;AAEA,MAAMC,eAAN,SAA8BF,KAAK,CAACG,SAApC,CAA8C;AAC5CC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SAKnBC,YALmB,GAKJ,MAAM;AAEnB;AACA,UAAIC,OAAO,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,MAAiB,IAAI,CAAJ,GAAQ,CAAzB,CAAX,IAA0C,CAAxD;;AACA,UAAIH,OAAO,IAAI,CAAf,EAAiB;AAEd;AACA;AACA,YAAII,SAAS,GAAGH,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,MAAiB,MAAM,CAAN,GAAU,CAA3B,IAAgC,CAA3C,CAAhB;;AACA,YAAIC,SAAS,IAAK,KAAK,CAAN,GAAY,EAAhB,CAAT,GAAgC,GAApC,EAA0C;AAEzC;AACA;AACAC,UAAAA,KAAK,CAAC,MAAD,CAAL;AACA,cAAIC,YAAY,GAAG,EAAnB;;AACA,eAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,CAApB,EAAuBA,CAAC,EAAxB,EAA2B;AAEtB,gBAAIA,CAAC,IAAI,CAAT,EAAW;AACVD,cAAAA,YAAY,CAACE,MAAb,CAAoBJ,SAApB;AAEA,aAHD,MAIK;AACJA,cAAAA,SAAS,GAAGA,SAAS,GAAG,EAAxB;AACAE,cAAAA,YAAY,CAACE,MAAb,CAAoBJ,SAApB;AACA;AAEL,WAjBwC,CAoBzC;;;AAEA,cAAIK,aAAa,GAAG,KAAKC,KAAL,CAAWD,aAAX,CAAyBE,KAAzB,EAApB;;AACA,eAAK,IAAIJ,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGD,YAAY,CAACM,MAAjC,EAAyCL,CAAC,EAA1C,EAA6C;AAC5CE,YAAAA,aAAa,CAACD,MAAd,CAAqBF,YAAY,CAACC,CAAD,CAAjC;AACA;;AACD,eAAKM,QAAL,CAAc;AAACJ,YAAAA,aAAa,EAAEA;AAAhB,WAAd;AAEA,SA5BD,MA8BK;AAEJ;AACA,eAAKV,YAAL;AAGA;AAIH,OA7CD,MA+CK;AAEJ,aAAKA,YAAL;AACA,OAtDkB,CAgElB;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAyBG,KAtGkB;;AAEjB,SAAKW,KAAL,GAAa;AAACD,MAAAA,aAAa,EAAE,EAAhB;AAAoBK,MAAAA,oBAAoB,EAAE;AAA1C,KAAb;AACD;;AAqGDC,EAAAA,MAAM,GAAG;AACP,wBACE;AAAA,iBACC,KAAKL,KAAL,CAAWD,aADZ,eAEE;AAAQ,QAAA,OAAO,EAAE,KAAKV,YAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAQD;;AAlH2C;;AAsH9C,eAAeJ,eAAf","sourcesContent":["\nimport React, { useState } from 'react';\n\nclass BattleshipBoard extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {shipPositions: [], verticalorHorizontal: null}\n  }\n\n  generateShip = () => {\n     \n    //generate either zero or one\n    var randNum = Math.floor(Math.random() * (1 - 0 + 1)) + 0;\n    if (randNum == 1){\n       \n       // generate a vertical ship\n       // generate an random number between 1 and 100, inclusive\n       var shipStart = Math.floor(Math.random() * (100 - 0 + 1) + 1);\n       if (shipStart + ((10 * 5) - (10)) > 100 ) {\n        \n        // the ship will go off the board if generating south\n        // build ship up\n        alert(\"here\");\n        var verticalShip = [];\n        for (var i = 0; i < 5; i++){\n\n             if (i == 0){\n             \tverticalShip.append(shipStart);\n\n             }\n             else {\n             \tshipStart = shipStart - 10;\n             \tverticalShip.append(shipStart);\n             }\n\n        }\n\n       \n        // append the new ship to shipPositions\n\n        var shipPositions = this.state.shipPositions.slice();\n        for (var i = 0; i < verticalShip.length; i++){\n        \tshipPositions.append(verticalShip[i]);\n        }\n        this.setState({shipPositions: shipPositions});\n\n       }\n\n       else {\n\n       \t// build ship down (south)\n       \tthis.generateShip();\n\n\n       }\n     \n\n\n    }\n\n    else {\n\n    \tthis.generateShip();\n    }\n\n\n\n\n\n\n\n\n\n     // generate random number between 1 and 100, inclusive: var randNum = ...\n// if randNum + ((10*length) - (10)) > 100: build ship up\n// var verticalShip = [];               \n// for (var i = 0; i < length; i++ ) { if (i=0){ verticalShip.append(randNum)} else{  randNum = randNum - 10 verticalShip.append(randNum)       }           }\n// same for building the ship down, except randNum = randNum + 10\n// check that none of the generated numbers are in the current position\n// const shipPositions = this.state.shipPositions.slice();\n// for (var i = 0; i < verticalShip.length; i++){ if shipPositions.index(verticalShip[i]) > -1} this.generateVertical(length); else{\n// for (var i= 0; i < verticalShip....){shipPositions.append(verticalShip[i])}\n  \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  }\n\n  render() {\n    return (\n      <div>\n      {this.state.shipPositions}\n        <button onClick={this.generateShip}>\n          Click me\n        </button>\n      </div>\n    );\n  }\n}\n\n\nexport default BattleshipBoard;"]},"metadata":{},"sourceType":"module"}