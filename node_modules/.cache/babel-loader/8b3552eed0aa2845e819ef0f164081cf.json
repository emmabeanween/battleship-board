{"ast":null,"code":"var _jsxFileName = \"/Users/emma/Documents/battleship-board/src/BattleshipBoard.js\";\nimport React, { useState } from 'react';\nimport Square from './Square'; // ideas for <Square \n// generate 100 <Square space=shipLengths[0]/>, <Square space=shipLengths[1]/>\n// \n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass BattleshipBoard extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.shipGuess = userGuess => {// update userGuesses here\n    };\n\n    this.generateShip = () => {\n      // generate a random number between 2 and 5 inclusive - 2, 3, 3, 4, 5 are the ship lengths\n      const randNum = Math.floor(Math.random() * (5 - 2 + 1)) + 2; // check ship lengths\n\n      var shipLengths = this.state.shipLengths.slice(); // see if ship Length is already in ship - i.e. 5\n\n      if (shipLengths.indexOf(randNum) > -1) {\n        // length is already in ship\n        // is the number equal to 3?\n        var count = 0;\n\n        for (var i = 0; i < shipLengths.length; i++) {\n          if (shipLengths[i] === 3) {\n            count++;\n          }\n        }\n\n        if (randNum == 3 && count < 2) {\n          shipLengths.push(randNum);\n          this.setState({\n            shipLengths: shipLengths\n          }); // generate ship start\n\n          const shipStart = Math.floor(Math.random() * (100 - 1 + 1)) + 1;\n          this.generateHorizontal(3, 51); //this.generateHorizontal(randNum, shipStart);\n          //this.generateVertical(randNum, shipStart );\n        } else {\n          if (shipLengths.length < 6) {\n            this.generateShip();\n          }\n        }\n      } else {\n        shipLengths.push(randNum);\n        this.setState({\n          shipLengths: shipLengths\n        });\n        const shipStart = Math.floor(Math.random() * (100 - 1 + 1)) + 1;\n        this.generateHorizontal(randNum, shipStart); //this.generateVertical(randNum, shipStart );\n      }\n    };\n\n    this.generateVertical = (shipLength, shipStart) => {\n      var verticalShip = []; // generate a vetical ship\n\n      if (shipStart + (10 * shipLength - 10) > 100) {\n        // the ship will go off the board if generating south\n        // build ship up\n        for (var i = 0; i < shipLength; i++) {\n          if (i == 0) {\n            verticalShip.push(shipStart);\n          } else {\n            shipStart = shipStart - 10;\n            verticalShip.push(shipStart);\n          }\n        }\n      } else {\n        // generate vertical ship down\n        for (var i = 0; i < shipLength; i++) {\n          if (i == 0) {\n            verticalShip.push(shipStart);\n          } else {\n            shipStart = shipStart + 10;\n            verticalShip.push(shipStart);\n          }\n        }\n      }\n\n      var shipPositions = this.state.shipPositions.slice();\n      var alreadyGenerated = false;\n\n      for (var i = 0; i < verticalShip.length; i++) {\n        if (shipPositions.indexOf(verticalShip[i]) > -1) {\n          alreadyGenerated = true;\n        }\n      } // check alreadyGenerated\n\n\n      if (alreadyGenerated == true) {\n        const newShipStart = Math.floor(Math.random() * (100 - 1 + 1)) + 1;\n        this.generateVertical(shipLength, newShipStart); // generate a ship again with a new starting position\n      } else {\n        // append to shipPositions\n        for (var i = 0; i < verticalShip.length; i++) {\n          shipPositions.push(verticalShip[i]);\n          this.setState({\n            shipPositions: shipPositions\n          });\n        }\n\n        alert(shipPositions);\n      }\n    };\n\n    this.generateHorizontal = (shipLength, shipStart) => {\n      // if ship goes too far to the left\n      // generate ship first\n      // \n      var horizontalShip = []; // try generating to the left first\n\n      var start = shipStart - shipLength + 1; //alert(shipStart);\n      //alert(shipLength);\n      //alert(start);\n\n      for (var i = 0; i < shipLength; i++) {\n        if (i == 0) {\n          horizontalShip.push(shipStart);\n        } else {\n          shipStart = shipStart - 1;\n          horizontalShip.push(shipStart);\n        }\n      } // does ship not work?\n\n\n      var newGenerate = false;\n\n      for (var i = 0; i < shipLength; i++) {\n        if (horizontalShip[i] % 10 == 1 && i != shipLength - 1) {\n          // re-generate ship to the right\n          newGenerate = true;\n          break;\n        }\n      }\n\n      if (newGenerate == false) {\n        alert(horizontalShip);\n      } else {\n        alert(\"redoing\");\n      }\n    };\n\n    this.state = {\n      shipPositions: [],\n      shipLengths: [],\n      userGuesses: []\n    }; // pass this in to UserSquare\n  }\n\n  //  43, 42, 41, 40\n  // 54, 53, 52, 51, 50\n  // 53, 52,51, 50, 49\n  // 60, 59, 58, 57, 56\n  // 57, 56, 55, 54, 53\n  // if the start is less than the includes number?\n  // 100 questions\n  // what was your major at Davis? did you live close by? how often did you visit the dining halls + food trucks/did you like the Silo?\n  // did you date much in college? are you more extroverted or introverted, and have you changed over time? did you attend any parties at Davis?\n  // did you grow up in this area - sac? if not, how does it differ from where you did live? where would you like to travel to?\n  // do you have a big family? are you close with them? if not, why and if so, your mom? are you more of a sponatenous person, or not? you say you like camping, have you ever\n  // heard of glamping? are you more of a homebody, or do you like to go out? do you like cats? do you like to cook? \n  // how did you pick you current line of work, and how often do you have to go in? have you found you made friends at work\n  // how easy do you think it is to meet people our age around here, for friends or dates? how many places have you tried around here?\n  // do you prefer midtown, downtwon, the more ghetto part of sacramento? are you a sports fan and do you attend any kings games?\n  // \n  //generate either zero or one\n  //var randNum = Math.floor(Math.random() * (1 - 0 + 1)) + 0;\n  // generate a vertical ship\n  // generate an random number between 1 and 100, inclusive\n  //  var shipStart = Math.floor(Math.random() * (100 - 1 + 1) + 1);\n  //  var shipLength = Math.floor(Math.random() * (5 - 2 + 1) + 2);\n  // \tvar shipLengths = this.state.shipLengths.slice();\n  //  \tif (shipLength == 3){\n  // if appears twice\n  //\tvar count = 0;\n  // shipLengths.forEach(element => {\n  // if (element === 3) {\n  //  count += 1;\n  // }});\n  // if (count == 2){\n  //\tthis.generateShip();\n  //  }\n  //  else {\n  //  shipLengths.push(shipLength);\n  // this.setState({shipLengths: shipLengths});\n  // this.generateVertical(shipLength, shipStart);\n  // }\n  // \t}\n  //\telse {\n  // if (shipLengths.indexOf(shipLength) > -1){\n  //\t\tthis.generateShip();\n  //  \t}\n  //  \telse {\n  //  \tshipLengths.push(shipLength);\n  //  \tthis.setState({shipLengths: shipLengths});\n  // add a ship \n  // \tthis.generateVertical(shipLength, shipStart);\n  // \t}\n  // \t}\n  //}\n  // generate random number between 1 and 100, inclusive: var randNum = ...\n  // if randNum + ((10*length) - (10)) > 100: build ship up\n  // var verticalShip = [];               \n  // for (var i = 0; i < length; i++ ) { if (i=0){ verticalShip.append(randNum)} else{  randNum = randNum - 10 verticalShip.append(randNum)       }           }\n  // same for building the ship down, except randNum = randNum + 10\n  // check that none of the generated numbers are in the current position\n  // const shipPositions = this.state.shipPositions.slice();\n  // for (var i = 0; i < verticalShip.length; i++){ if shipPositions.index(verticalShip[i]) > -1} this.generateVertical(length); else{\n  // for (var i= 0; i < verticalShip....){shipPositions.append(verticalShip[i])}\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [this.state.shipPositions + ' ', /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.generateShip,\n        children: \"Click me\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 393,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 391,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default BattleshipBoard;","map":{"version":3,"sources":["/Users/emma/Documents/battleship-board/src/BattleshipBoard.js"],"names":["React","useState","Square","BattleshipBoard","Component","constructor","props","shipGuess","userGuess","generateShip","randNum","Math","floor","random","shipLengths","state","slice","indexOf","count","i","length","push","setState","shipStart","generateHorizontal","generateVertical","shipLength","verticalShip","shipPositions","alreadyGenerated","newShipStart","alert","horizontalShip","start","newGenerate","userGuesses","render"],"mappings":"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","sourcesContent":["\nimport React, { useState } from 'react';\nimport Square from './Square';\n\n\n// ideas for <Square \n// generate 100 <Square space=shipLengths[0]/>, <Square space=shipLengths[1]/>\n// \n\nclass BattleshipBoard extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {shipPositions: [], shipLengths: [], userGuesses: []}\n    // pass this in to UserSquare\n  }\n\n  shipGuess = (userGuess) => {\n      \n      // update userGuesses here\n\n\n\n  }\n\n\n\n\n\n generateShip = () => {\n// generate a random number between 2 and 5 inclusive - 2, 3, 3, 4, 5 are the ship lengths\nconst randNum = Math.floor(Math.random() * (5 - 2 + 1)) + 2;\n// check ship lengths\nvar shipLengths = this.state.shipLengths.slice();\n// see if ship Length is already in ship - i.e. 5\nif (shipLengths.indexOf(randNum) > -1){\n// length is already in ship\n\n// is the number equal to 3?\n var count = 0;\n    for (var i = 0; i < shipLengths.length; i++) {\n        if (shipLengths[i] === 3) {\n            count++;\n        }\n    }\n\nif (randNum == 3 && count < 2){\n\n\tshipLengths.push(randNum);\n\tthis.setState({shipLengths: shipLengths});\n\t// generate ship start\n\tconst shipStart = Math.floor(Math.random() * (100 - 1 + 1)) + 1;\n\tthis.generateHorizontal(3, 51);\n\t//this.generateHorizontal(randNum, shipStart);\n\t//this.generateVertical(randNum, shipStart );\n\n}\n\nelse {\n\n   \nif (shipLengths.length < 6){\n\n    this.generateShip();\n}\n\n\n\n}\n}\n\nelse {\n\nshipLengths.push(randNum);\nthis.setState({shipLengths: shipLengths});\nconst shipStart = Math.floor(Math.random() * (100 - 1 + 1)) + 1;\nthis.generateHorizontal(randNum, shipStart);\n//this.generateVertical(randNum, shipStart );\n\n}\n\n\n}\n\n\ngenerateVertical = (shipLength, shipStart) => {\n\n\n\n\n  \n var verticalShip = [];\n       // generate a vetical ship\n       if (shipStart + ((10 * shipLength) - (10)) > 100 ) {\n\n        \n        // the ship will go off the board if generating south\n        // build ship up\n\n\n        \n\n        for (var i = 0; i < shipLength; i++){\n\n              if (i == 0){\n               verticalShip.push(shipStart);\n\n             }\n             else {\n\n                shipStart = shipStart - 10;\n                verticalShip.push(shipStart);\n                \n             }\n\n        }\n\n    }\n\n    else {\n\n        // generate vertical ship down\n        \n\n        for (var i = 0; i < shipLength; i++){\n\n              if (i == 0){\n               verticalShip.push(shipStart);\n\n             }\n             else {\n\n                shipStart = shipStart + 10;\n                verticalShip.push(shipStart);\n                \n             }\n\n        }\n\n\n\n    }\n\n\n\nvar shipPositions = this.state.shipPositions.slice();\nvar alreadyGenerated = false;\n        for (var i = 0; i < verticalShip.length; i++){\n        \tif (shipPositions.indexOf(verticalShip[i]) > -1){\n        \t\talreadyGenerated = true;\n        \t}\n\n        }\n\n        // check alreadyGenerated\n\n        if (alreadyGenerated == true){\n   \t\t\tconst newShipStart = Math.floor(Math.random() * (100 - 1 + 1)) + 1;\n        \tthis.generateVertical(shipLength, newShipStart); // generate a ship again with a new starting position\n        }\n\n        else {\n\n        \t// append to shipPositions\n\n        for (var i = 0; i < verticalShip.length; i++){\n\n\tshipPositions.push(verticalShip[i]);\n\tthis.setState({shipPositions: shipPositions});\n}\n\nalert(shipPositions);\n\n\n       \t\n      \n       }\n\n\n\n}\n\n\n\ngenerateHorizontal = (shipLength, shipStart) => {\n\n// if ship goes too far to the left\n\n// generate ship first\n// \nvar horizontalShip = [];\n// try generating to the left first\nvar start = ((shipStart - shipLength)) + 1;\n//alert(shipStart);\n//alert(shipLength);\n//alert(start);\nfor (var i = 0; i < shipLength; i++ ){\n\nif (i==0){\n\nhorizontalShip.push(shipStart);\n\n}\n\nelse {\n\tshipStart = shipStart - 1;\n\thorizontalShip.push(shipStart);\n}\n\n\n}\n\n\n// does ship not work?\nvar newGenerate=false;\n\nfor (var i = 0; i< shipLength; i++){\n\n\nif (horizontalShip[i] % 10 == 1 && i!=shipLength-1){\n\n// re-generate ship to the right\n  newGenerate=true;\n  break;\n\n\n\n}\n\n\n}\n\n\nif (newGenerate == false){\n\nalert(horizontalShip);\n\n\n}\n\n\nelse {\n\nalert(\"redoing\");\n\n\n\n\n\n}\n\n\n\n\n\n}\n\n//  43, 42, 41, 40\n// 54, 53, 52, 51, 50\n// 53, 52,51, 50, 49\n// 60, 59, 58, 57, 56\n// 57, 56, 55, 54, 53\n// if the start is less than the includes number?\n\n\n// 100 questions\n// what was your major at Davis? did you live close by? how often did you visit the dining halls + food trucks/did you like the Silo?\n// did you date much in college? are you more extroverted or introverted, and have you changed over time? did you attend any parties at Davis?\n// did you grow up in this area - sac? if not, how does it differ from where you did live? where would you like to travel to?\n// do you have a big family? are you close with them? if not, why and if so, your mom? are you more of a sponatenous person, or not? you say you like camping, have you ever\n// heard of glamping? are you more of a homebody, or do you like to go out? do you like cats? do you like to cook? \n// how did you pick you current line of work, and how often do you have to go in? have you found you made friends at work\n// how easy do you think it is to meet people our age around here, for friends or dates? how many places have you tried around here?\n// do you prefer midtown, downtwon, the more ghetto part of sacramento? are you a sports fan and do you attend any kings games?\n// \n\n\n\n\n\n \n\n\n\n\n\n  //generate either zero or one\n       //var randNum = Math.floor(Math.random() * (1 - 0 + 1)) + 0;\n       \n       // generate a vertical ship\n       // generate an random number between 1 and 100, inclusive\n     //  var shipStart = Math.floor(Math.random() * (100 - 1 + 1) + 1);\n     //  var shipLength = Math.floor(Math.random() * (5 - 2 + 1) + 2);\n      // \tvar shipLengths = this.state.shipLengths.slice();\n     //  \tif (shipLength == 3){\n\n       \t\t// if appears twice\n       \t//\tvar count = 0;\n\n        // shipLengths.forEach(element => {\n       // if (element === 3) {\n        //  count += 1;\n        // }});\n          \n       // if (count == 2){\n\n        //\tthis.generateShip();\n      //  }\n\n      //  else {\n  \n        //  shipLengths.push(shipLength);\n         // this.setState({shipLengths: shipLengths});\n         // this.generateVertical(shipLength, shipStart);\n\n       // }\n         \n\n\n      // \t}\n\n       //\telse {\n\n       // if (shipLengths.indexOf(shipLength) > -1){\n       //\t\tthis.generateShip();\n     //  \t}\n\n     //  \telse {\n\n     //  \tshipLengths.push(shipLength);\n     //  \tthis.setState({shipLengths: shipLengths});\n       \t// add a ship \n      // \tthis.generateVertical(shipLength, shipStart);\n\n\n      // \t}\n\n      // \t}\n\n\n   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n//}\n\n\n \n\n\n\n\n\n\n\n\n\n     // generate random number between 1 and 100, inclusive: var randNum = ...\n// if randNum + ((10*length) - (10)) > 100: build ship up\n// var verticalShip = [];               \n// for (var i = 0; i < length; i++ ) { if (i=0){ verticalShip.append(randNum)} else{  randNum = randNum - 10 verticalShip.append(randNum)       }           }\n// same for building the ship down, except randNum = randNum + 10\n// check that none of the generated numbers are in the current position\n// const shipPositions = this.state.shipPositions.slice();\n// for (var i = 0; i < verticalShip.length; i++){ if shipPositions.index(verticalShip[i]) > -1} this.generateVertical(length); else{\n// for (var i= 0; i < verticalShip....){shipPositions.append(verticalShip[i])}\n  \n\n\n\n  render() {\n    return (\n      <div>\n      {this.state.shipPositions + ' '}\n        <button onClick={this.generateShip}>\n          Click me\n        </button>\n\n\n\n\n\n\n\n\n      </div>\n    );\n  }\n}\n\n\nexport default BattleshipBoard;"]},"metadata":{},"sourceType":"module"}